buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'

group = 'de.rohitmisra'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    compile 'org.springdoc:springdoc-openapi-core:1.1.44'
    compile 'org.springdoc:springdoc-openapi-ui:1.1.44'
    compile 'org.joda:joda-money:1.0.1'

    compile group: 'com.h2database', name: 'h2', version: '1.4.197'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    compile 'org.modelmapper:modelmapper:2.3.5'
}

node {
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
    description = "Installs all dependencies from package.json"
    workingDir = file("${project.projectDir}/src/main/webapp/")
    args = ["install"]
}

task appNpmBuild(type: NpmTask) {
    description = "Builds production version of the webapp"
    workingDir = file("${project.projectDir}/src/main/webapp")
    args = ["run", "build"]
}

task copyWebApp(type: Copy) {
    from 'src/main/webapp/build'
    into 'build/resources/main/static/.'
}
appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp