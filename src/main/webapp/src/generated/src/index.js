/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CategoryProductTreeResponse', 'model/CategoryRequest', 'model/CategoryResponse', 'model/ProductRequest', 'model/ProductResponse', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/CategoryProductTreeResponse'), require('./model/CategoryRequest'), require('./model/CategoryResponse'), require('./model/ProductRequest'), require('./model/ProductResponse'), require('./api/DefaultApi'));
  }
}(function(ApiClient, CategoryProductTreeResponse, CategoryRequest, CategoryResponse, ProductRequest, ProductResponse, DefaultApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var OpenApiDefinition = require('index'); // See note below*.
   * var xxxSvc = new OpenApiDefinition.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new OpenApiDefinition.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new OpenApiDefinition.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new OpenApiDefinition.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The CategoryProductTreeResponse model constructor.
     * @property {module:model/CategoryProductTreeResponse}
     */
    CategoryProductTreeResponse: CategoryProductTreeResponse,
    /**
     * The CategoryRequest model constructor.
     * @property {module:model/CategoryRequest}
     */
    CategoryRequest: CategoryRequest,
    /**
     * The CategoryResponse model constructor.
     * @property {module:model/CategoryResponse}
     */
    CategoryResponse: CategoryResponse,
    /**
     * The ProductRequest model constructor.
     * @property {module:model/ProductRequest}
     */
    ProductRequest: ProductRequest,
    /**
     * The ProductResponse model constructor.
     * @property {module:model/ProductResponse}
     */
    ProductResponse: ProductResponse,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
